name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  DOCKER_HUB_USERNAME: rahulkaswa
  APP_IMAGE_NAME: hackathonapp
  PROPHET_IMAGE_NAME: prophet-predictor

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      app-changed: ${{ steps.changes.outputs.app }}
      prophet-changed: ${{ steps.changes.outputs.prophet }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Detect file changes
      uses: dorny/paths-filter@v2
      id: changes
      with:
        filters: |
          app:
            - 'app/**'
          prophet:
            - 'prophet-predictor/**'

  build-and-push:
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.app-changed == 'true' || needs.detect-changes.outputs.prophet-changed == 'true'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ env.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}
        
    - name: Extract metadata for app image
      id: meta-app
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.DOCKER_HUB_USERNAME }}/${{ env.APP_IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}
          
    - name: Extract metadata for prophet image
      id: meta-prophet
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.DOCKER_HUB_USERNAME }}/${{ env.PROPHET_IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}
          
    - name: Build and push app image
      if: needs.detect-changes.outputs.app-changed == 'true'
      uses: docker/build-push-action@v5
      with:
        context: ./app
        file: ./app/Dockerfile
        push: true
        tags: ${{ steps.meta-app.outputs.tags }}
        labels: ${{ steps.meta-app.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: Build and push prophet-predictor image
      if: needs.detect-changes.outputs.prophet-changed == 'true'
      uses: docker/build-push-action@v5
      with:
        context: ./prophet-predictor
        file: ./prophet-predictor/Dockerfile
        push: true
        tags: ${{ steps.meta-prophet.outputs.tags }}
        labels: ${{ steps.meta-prophet.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Log build summary
      run: |
        echo "## Build Summary" >> $GITHUB_STEP_SUMMARY
        echo "| Component | Status | Reason |" >> $GITHUB_STEP_SUMMARY
        echo "|-----------|--------|--------|" >> $GITHUB_STEP_SUMMARY
        if [ "${{ needs.detect-changes.outputs.app-changed }}" == "true" ]; then
          echo "| App | ‚úÖ Built | Changes detected in app/ directory |" >> $GITHUB_STEP_SUMMARY
        else
          echo "| App | ‚è≠Ô∏è Skipped | No changes in app/ directory |" >> $GITHUB_STEP_SUMMARY
        fi
        if [ "${{ needs.detect-changes.outputs.prophet-changed }}" == "true" ]; then
          echo "| Prophet | ‚úÖ Built | Changes detected in prophet-predictor/ directory |" >> $GITHUB_STEP_SUMMARY
        else
          echo "| Prophet | ‚è≠Ô∏è Skipped | No changes in prophet-predictor/ directory |" >> $GITHUB_STEP_SUMMARY
        fi

  security-scan:
    runs-on: ubuntu-latest
    needs: [detect-changes, build-and-push]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' && (needs.detect-changes.outputs.app-changed == 'true' || needs.detect-changes.outputs.prophet-changed == 'true')
    
    steps:
    - name: Run Trivy vulnerability scanner for app
      if: needs.detect-changes.outputs.app-changed == 'true'
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: '${{ env.DOCKER_HUB_USERNAME }}/${{ env.APP_IMAGE_NAME }}:latest'
        format: 'sarif'
        output: 'trivy-app-results.sarif'
        
    - name: Run Trivy vulnerability scanner for prophet
      if: needs.detect-changes.outputs.prophet-changed == 'true'
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: '${{ env.DOCKER_HUB_USERNAME }}/${{ env.PROPHET_IMAGE_NAME }}:latest'
        format: 'sarif'
        output: 'trivy-prophet-results.sarif'
        
    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: '.'

  notify:
    runs-on: ubuntu-latest
    needs: [detect-changes, build-and-push]
    if: always()
    
    steps:
    - name: Notify deployment status
      run: |
        echo "## üöÄ CI/CD Pipeline Results"
        echo ""
        echo "### Changes Detected:"
        echo "- App changes: ${{ needs.detect-changes.outputs.app-changed }}"
        echo "- Prophet changes: ${{ needs.detect-changes.outputs.prophet-changed }}"
        echo ""
        
        if [ "${{ needs.build-and-push.result }}" == "success" ]; then
          echo "### ‚úÖ Build Status: SUCCESS"
          if [ "${{ needs.detect-changes.outputs.app-changed }}" == "true" ]; then
            echo "üîó App Image: ${{ env.DOCKER_HUB_USERNAME }}/${{ env.APP_IMAGE_NAME }}:latest"
          fi
          if [ "${{ needs.detect-changes.outputs.prophet-changed }}" == "true" ]; then
            echo "üîó Prophet Image: ${{ env.DOCKER_HUB_USERNAME }}/${{ env.PROPHET_IMAGE_NAME }}:latest"
          fi
        elif [ "${{ needs.build-and-push.result }}" == "skipped" ]; then
          echo "### ‚è≠Ô∏è Build Status: SKIPPED"
          echo "No changes detected in app.py or predictor.py files"
        else
          echo "### ‚ùå Build Status: FAILED"
          exit 1
        fi